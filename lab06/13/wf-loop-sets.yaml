apiVersion: argoproj.io/v1alpha1
kind: Workflow 
metadata: 
  generateName: user00-wf-loop-sets 
spec: 
  entrypoint: dag-template
  arguments:
    parameters:
    - name: message1 
      value: Task 1 is executed
    - name: message2 
      value: Task 2 is executed 
  templates: 
  - name: dag-template 
    inputs: 
      parameters: 
      - name: message1 
      - name: message2 
    dag: 
      tasks: 
      - name: task1
        template: task-template 
        arguments: 
          parameters: [{name: text, value: "{{inputs.parameters.message1}}" }]

      - name: task2
        template: task-template
        arguments:
          parameters: [{name: text, value: "{{inputs.parameters.message2}}" }]

      - name: task3
        template: task-loop-set-template
        dependencies: [task1] 
        arguments:
          parameters: 
          - name: extractor 
            value: "{{ item.extractor }}"  
          - name: table 
            value: "{{ item.table }}"
        withItems: 
        - { extractor: 'pythonExtractor', table: 'Table 1'}
        - { extractor: 'pySparkExtractor', table: 'Table 2'}
        - { extractor: 'DaskExtractor', table: 'Table 3'}
  - name: task-template 
    inputs: 
      parameters: 
      - name: text 
    script: 
      image: python:3.8-slim 
      command: [python] 
      source: |
        p = '{{inputs.parameters.text}}'
        print(p)
  - name: task-loop-set-template 
    inputs: 
      parameters: 
      - name: extractor 
      - name: table 
    script: 
      image: python:3.8-slim 
      command: [python]
      source: |
        import os
        print("Appling ", "{{inputs.parameters.extractor}}", " to the table ", "{{inputs.parameters.table}}")
        print (os.environ['TEST_PASSWORD'])
      env: 
      - name: TEST_PASSWORD
        valueFrom: 
          secretKeyRef: 
            name: test-secret 
            key: test-password

