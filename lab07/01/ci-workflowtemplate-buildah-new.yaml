apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci-workflow
  namespace: argo
spec:
  templates:
  - name: git-checkout-private
    inputs:
      parameters:
      - name: repo
      - name: revision
      artifacts:
      - name: source
        path: /src
        git:
          repo: "{{inputs.parameters.repo}}"
          revision: "{{inputs.parameters.revision}}"

    container:
      image: alpine/git
      command: [sh, -c]
      args: ["cd /src && git status && ls -l && git rev-parse --short HEAD > /tmp/git-commit"]
    outputs:
      artifacts:
        - name: source
          path: /src
      parameters:
        - name: tag
          valueFrom:
            path: /tmp/git-commit
            
  - name: build-package
    inputs:
      artifacts:
      - name: source
        path: /src
    container:
      image: gcr.io/cloud-builders/mvn:latest
      command: [sh, -c]
      args: ["cd /src && ls -a &&  mvn clean package -DskipTests"]
    outputs:
      artifacts:
      - name: source
        path: /src
  - name: build-and-push
    inputs:
        artifacts:
        - name: source
          path: /src
        parameters:
        - name: imageUrl
        - name: imageTag
        - name: pathToContext
    container:
        image: quay.io/buildah/stable
        command: [ sh, -euxc ]
        args: 
        - |
          buildah bud --tls-verify=true --layers -f deployment/Dockerfile -t '{{inputs.parameters.imageUrl}}:{{inputs.parameters.imageTag}}' .
          buildah push --tls-verify=true '{{inputs.parameters.imageUrl}}:{{inputs.parameters.imageTag}}'

        workingDir: "/src"
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 0
          privileged: true
        env:
          - name: DOCKER_CONFIG 
            value: "/root/.docker"
        volumeMounts:
          - name: varlibc
            mountPath: /var/lib/containers
          - name: docker-config 
            mouthPath: /root/.docker
        activeDeadlineSeconds: 300
